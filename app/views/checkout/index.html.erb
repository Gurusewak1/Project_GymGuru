<!-- app/views/checkout/index.html.erb -->

<h1>Checkout Summary</h1>

<div class="invoice-summary">
  <% if current_user.province.blank? || !TaxRate.exists?(province: current_user.province) %>
    <%= form_with(url: update_province_checkout_index_path, method: :patch, id: "update-province-form") do %>
      <div class="form-group">
        <%= label_tag :province, "Select your province:" %>
        <%= select_tag :province, options_for_select(@provinces, current_user.province), class: "form-control", onchange: "document.getElementById('update-province-form').submit();" %>
      </div>
    <% end %>
  <% end %>

  <h2>Invoice Summary</h2>

  <table class="table table-bordered">
    <tbody>
      <tr>
        <td>Customer Name</td>
        <td><%= current_user.name %></td>
      </tr>
      <tr>
        <td>Email</td>
        <td><%= current_user.email %></td>
      </tr>
      <tr>
        <td>Address</td>
        <td><%= current_user.address %></td>
      </tr>
      <tr>
        <td>Province</td>
        <td><%= @province_name %></td> <!-- Display province name if it exists -->
      </tr>
      <tr>
        <td>Products</td>
        <td>
          <ul>
            <% @products.each do |product| %>
              <li><%= product.name %> - Quantity: <%= @cart[product.id.to_s] %></li>
            <% end %>
          </ul>
        </td>
      </tr>
      <tr>
        <td>Subtotal</td>
        <td><%= number_to_currency(@subtotal) %></td>
      </tr>
      <tr>
        <td>GST</td>
        <td><%= number_to_currency(@taxes_gst) %></td>
      </tr>
      <tr>
        <td>PST</td>
        <td><%= number_to_currency(@taxes_pst) %></td>
      </tr>
      <tr>
        <td>HST</td>
        <td><%= number_to_currency(@taxes_hst) %></td>
      </tr>
      <tr>
        <td>Total</td>
        <td><%= number_to_currency(@total) %></td>
      </tr>
    </tbody>
  </table>

  <!-- Stripe Payment Form -->
  <div id="payment-form">
    <h3>Enter Payment Information</h3>
    <div id="card-element">
      <!-- Stripe.js Element placeholder -->
      <!-- This is where Stripe Elements will render its UI components -->
    </div>
    <button id="submit-payment" class="btn btn-primary mt-3">Submit Payment</button>
    <div id="payment-result"></div>
  </div>
</div>

<div class="back-to-cart">
  <%= link_to "Back to Cart", cart_path %>
</div>

<script type="text/javascript">
  // Load Stripe.js and initialize Stripe Elements
  document.addEventListener('DOMContentLoaded', function () {
    const stripe = Stripe('<%= Rails.configuration.stripe[:publishable_key] %>');

    // Create an instance of Elements and mount the card Element to the `card-element` div.
    const elements = stripe.elements();
    const card = elements.create('card');
    card.mount('#card-element');

    // Handle form submission and payment processing
    const form = document.getElementById('payment-form');
    const submitButton = document.getElementById('submit-payment');
    const paymentResult = document.getElementById('payment-result');

    form.addEventListener('submit', async function(event) {
      event.preventDefault();

      // Disable the submit button to prevent multiple submissions
      submitButton.disabled = true;

      // Create payment method using the card Element
      const { paymentMethod, error } = await stripe.createPaymentMethod({
        type: 'card',
        card: card,
      });

      if (error) {
        // Display error message if payment fails
        paymentResult.textContent = error.message;
        submitButton.disabled = false;
      } else {
        // If payment is successful, handle the payment method ID
        const paymentMethodId = paymentMethod.id;

        // Submit the payment method ID to your server to complete the payment
        fetch('<%= checkout_create_payment_path %>', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ payment_method_id: paymentMethodId }),
        })
        .then(response => response.json())
        .then(data => {
          // Handle response from server (e.g., show success message)
          paymentResult.textContent = data.message;
          submitButton.disabled = false;
          // Optionally redirect to a success page or update UI
          window.location.href = '<%= checkout_success_path %>';
        })
        .catch(error => {
          // Handle error if request fails
          paymentResult.textContent = 'Error processing payment.';
          submitButton.disabled = false;
        });
      }
    });
  });
</script>